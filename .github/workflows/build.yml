name: Test & Build

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  actions: read
  checks: read
  contents: write
  deployments: none
  issues: none
  packages: none
  pull-requests: write
  repository-projects: none
  security-events: read
  statuses: none

defaults:
  run:
    shell: bash

jobs:
  create-tag:
    name: Create Tags
    uses: ./.github/workflows/create-tags.yml

  build:
    name: "Build & Push Containers"
    needs: ['create-tag']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: "0"
      - uses: unfor19/install-aws-cli-action@f5b46b7f32cf5e7ebd652656c5036bf83dd1e60c # 1.0.8

      - name: Build Container
        run: |
          make build

      - name: Configure OIDC AWS credentials for ECR push
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        with:
          role-to-assume: arn:aws:iam::311462405659:role/sirius-component-ecr-role
          role-session-name: opg-sirius-end-to-end-tests-github-actions-ecr-push
          role-duration-seconds: 900
          aws-region: eu-west-1

      - name: ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registries: 311462405659

      - name: Push Container
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          END_TO_END_TESTS_ECR_REPOSITORY: sirius/end-to-end-tests
        run: |
          docker tag 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/end-to-end-tests:latest $ECR_REGISTRY/$END_TO_END_TESTS_ECR_REPOSITORY:${{ needs.create-tag.outputs.tag }}
          if ${{ github.ref_name == 'main' }}
          then
            docker tag 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/end-to-end-tests:latest $ECR_REGISTRY/$END_TO_END_TESTS_ECR_REPOSITORY:main-${{ needs.create-tag.outputs.tag }}
            docker tag 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/end-to-end-tests:latest $ECR_REGISTRY/$END_TO_END_TESTS_ECR_REPOSITORY:main-${{ needs.create-tag.outputs.tag }}-${{ needs.create-tag.outputs.timestamp }}
            # We want all of the tags pushed
            docker push --all-tags $ECR_REGISTRY/$END_TO_END_TESTS_ECR_REPOSITORY
          else
            docker push $ECR_REGISTRY/$END_TO_END_TESTS_ECR_REPOSITORY:${{ needs.create-tag.outputs.tag }}
          fi

      - name: Trigger remote testing
        shell: bash
        run: curl -XPOST -u ${{ secrets.JENKINS_API_USER }}:${{ secrets.JENKINS_API_TOKEN }} "https://${{ secrets.JENKINS_URL }}/job/Sirius/job/End-to-End_Test/buildWithParameters?token=${{ secrets.JENKINS_API_TOKEN_NAME }}&e2e_tag=${{ needs.create-tag.outputs.tag }}&e2e_commit=${{ github.event.pull_request.head.sha }}"

  end_of_pr_workflow:
    name: End of PR Workflow
    runs-on: ubuntu-latest
    if: always()
    needs: ['create-tag', 'build']
    steps:
      - name: End of PR Workflow
        run: |
          if ${{ contains(needs.*.result,'failure') }}
          then
            echo "Not all checks succedeed, check the previous jobs."
            exit 1
          else
            echo "All checks succedeed!"
            exit 0
          fi

  push-tags:
    runs-on: ubuntu-latest
    needs: ['create-tag', 'end_of_pr_workflow']
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Configure OIDC AWS credentials for SSM
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        with:
          role-to-assume: arn:aws:iam::997462338508:role/sirius-component-ssm-role
          role-session-name: opg-sirius-end-to-end-tests-github-actions-ssm-push
          role-duration-seconds: 900
          aws-region: eu-west-1

      - name: Install AWS CLI
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@f5b46b7f32cf5e7ebd652656c5036bf83dd1e60c # 1.0.8

      - name: Push Tag to Parameter Store
        run: |
          aws ssm put-parameter --name "opg-sirius-end-to-end-tests-latest-green-build" --type "String" --value "${{ needs.create-tag.outputs.tag }}" --overwrite --region=eu-west-1
