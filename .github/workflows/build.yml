name: Test & Build

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  version:
    name: temp version
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.extract_branch.outputs.branch }}
    steps:
      - uses: actions/checkout@v2
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_HEAD_REF#refs/heads/})"
        id: extract_branch

  build:
    name: Build Container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: /tmp/images
          key: ${{ runner.os }}-images-${{ github.run_id }}-${{ github.run_number }}

      - name: Build Image
        run: |
          docker build --tag sirius/end-to-end-tests:latest -f Dockerfile .

      - name: Scan
        run: |
          docker run --rm  -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image sirius/end-to-end-tests:latest

  test:
    name: "Test against Sirius"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/cache@v2
        with:
          path: /tmp/images
          key: ${{ runner.os }}-images-${{ github.run_id }}-${{ github.run_number }}

      - name: Checkout Sirius
        uses: snow-actions/sparse-checkout@v1.1.0
        with:
          repository: ministryofjustice/opg-sirius
          ref: master
          token: ${{ secrets.GITHUB_TOKEN }}
          path: sirius
          patterns: |
            Makefile*
            docker-compose*
            **/docker-compose.env
            scripts/localstack/**
            scripts/localstack-s3/**
            ci/**

      - name: Standup Sirius
        working-directory: sirius
        run: make dev-up

      - name: Test
        run: docker-compose up cypress

  push:
    name: "Push Containers"
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/cache@v2
        with:
          path: /tmp/images
          key: ${{ runner.os }}-images-${{ github.run_id }}-${{ github.run_number }}

      - name: Bump version
        id: bump_version
        uses: anothrNick/github-tag-action@1.33.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INITIAL_VERSION: 1.0.0
          DEFAULT_BUMP: minor
          PRERELEASE_SUFFIX: ${{ env.BRANCH_NAME }}
          RELEASE_BRANCHES: main
          WITH_V: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::311462405659:role/sirius-actions-ci
          role-duration-seconds: 3600
          role-session-name: GitHubActions

      - name: ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: 311462405659

      - name: Push Container
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          END_TO_END_TESTS_ECR_REPOSITORY: sirius/end-to-end-tests
        run: |
          docker tag sirius/end-to-end-tests:latest $ECR_REGISTRY/$END_TO_END_TESTS_ECR_REPOSITORY:${{ steps.bump_version.outputs.tag }}
          if [ $BRANCH_NAME == "main" ]; then
            docker tag sirius/end-to-end-tests:latest $ECR_REGISTRY/$END_TO_END_TESTS_ECR_REPOSITORY:latest
            docker tag sirius/end-to-end-tests:latest $ECR_REGISTRY/$END_TO_END_TESTS_ECR_REPOSITORY:main-${{ steps.bump_version.outputs.tag }}
            # We want all of the tags pushed
            docker push --all-tags $ECR_REGISTRY/$END_TO_END_TESTS_ECR_REPOSITORY
          else
            docker push $ECR_REGISTRY/$END_TO_END_TESTS_ECR_REPOSITORY:${{ steps.bump_version.outputs.tag }}
          fi

  push-tags:
    runs-on: ubuntu-latest
    needs: push
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::997462338508:role/sirius-actions-ci
          role-duration-seconds: 3600
          role-session-name: GitHubActions

      - name: Install AWS CLI
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1

      - name: Push Tag to Parameter Store
        run: |
          aws ssm put-parameter --name "opg-sirius-end-to-end-tests-latest-green-build" --type "String" --value "${{ needs.build.outputs.tag}}" --overwrite --region=eu-west-1
