{
  "specName": "cypress/e2e/supervision/help-and-guidance/help-and-guidance.cy.js",
  "title": "content is accessible when expanded",
  "suiteName": "Help and Guidance",
  "testName": "Help and Guidance content is accessible when expanded",
  "testError": "`cy.then()` timed out after waiting `30000ms`.\n\nYour callback function returned a promise that never resolved.\n\nThe callback function was:\n\nfunction ($frame) { return __awaiter(_this, void 0, void 0, function () {\n        var contentWindow, hasNavigated, loadLog;\n        var _a, _b;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    (_a = log) === null || _a === void 0 ? void 0 : _a.set('$el', $frame);\n                    if ($frame.length !== 1) {\n                        throw new Error(\"cypress-iframe commands can only be applied to exactly one iframe at a time.  Instead found \" + $frame.length);\n                    }\n                    contentWindow = $frame.prop('contentWindow');\n                    hasNavigated = fullOpts.url\n                        ? function () {\n                            var _a;\n                            return typeof fullOpts.url === 'string'\n                                ? contentWindow.location.toString().includes(fullOpts.url)\n                                : (_a = fullOpts.url) === null || _a === void 0 ? void 0 : _a.test(contentWindow.location.toString());\n                        }\n                        : function () { return contentWindow.location.toString() !== 'about:blank'; };\n                    _c.label = 1;\n                case 1:\n                    if (!!hasNavigated()) return [3, 3];\n                    return [4, sleep(100)];\n                case 2:\n                    _c.sent();\n                    return [3, 1];\n                case 3:\n                    if (contentWindow.document.readyState === 'complete') {\n                        return [2, $frame];\n                    }\n                    loadLog = Cypress.log({\n                        name: 'Frame Load',\n                        message: [contentWindow.location.toString()],\n                        event: true,\n                    }).snapshot();\n                    return [4, new Promise(function (resolve) {\n                            Cypress.$(contentWindow).on('load', resolve);\n                        })];\n                case 4:\n                    _c.sent();\n                    loadLog.end();\n                    (_b = log) === null || _b === void 0 ? void 0 : _b.finish();\n                    return [2, $frame];\n            }\n        });\n    }); }\n\nhttps://on.cypress.io/then",
  "testCommands": [
    "visit /auth/logout",
    "clearCookies ",
    "visit /oauth/login",
    "get input[name=\"email\"]",
    "clear ",
    "get input[name=\"email\"]",
    "type case.manager@opgtest.com",
    "get [type=\"submit\"]",
    "click ",
    "form sub --submitting form--",
    "page load --waiting for new page to load--",
    "new url https://development.sirius.opg.service.justice.gov.uk/supervision/#/dashboard",
    "request /supervision/#/dashboard",
    "request /supervision/#/dashboard",
    "request /supervision/#/dashboard",
    "request /supervision/#/dashboard",
    "request /supervision/#/dashboard",
    "request /supervision/#/dashboard",
    "request /supervision/#/dashboard",
    "visit /supervision/#/dashboard",
    "get #open-help-and-guidance-main-menu-link",
    "click ",
    "frame loaded iframe.help-and-guidance__iframe",
    "request {timeout: 30000}, function(){}",
    "Frame Load https://wordpress.development.sirius.opg.service.justice.gov.uk/",
    "then {timeout: 30000}, function(){}"
  ]
}
